import * as tslib_1 from "tslib";
import { ComponentFactoryResolver, Directive, ElementRef, Injector, ViewContainerRef } from '@angular/core';
import { AngularDelegate } from '../../providers/angular-delegate';
import { ProxyCmp, proxyOutputs } from '../proxies-utils';
import * as ɵngcc0 from '@angular/core';
var NavDelegate = /** @class */ (function () {
    function NavDelegate(ref, resolver, injector, angularDelegate, location) {
        this.el = ref.nativeElement;
        ref.nativeElement.delegate = angularDelegate.create(resolver, injector, location);
        proxyOutputs(this, this.el, ['ionNavDidChange', 'ionNavWillChange']);
    }
    NavDelegate.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: AngularDelegate },
        { type: ViewContainerRef }
    ]; };
    NavDelegate = tslib_1.__decorate([
        ProxyCmp({
            inputs: ['animated', 'animation', 'root', 'rootParams', 'swipeGesture'],
            methods: ['push', 'insert', 'insertPages', 'pop', 'popTo', 'popToRoot', 'removeIndex', 'setRoot', 'setPages', 'getActive', 'getByIndex', 'canGoBack', 'getPrevious']
        }),
    ], NavDelegate);
NavDelegate.ɵfac = function NavDelegate_Factory(t) { return new (t || NavDelegate)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(AngularDelegate), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
NavDelegate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NavDelegate, selectors: [["ion-nav"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NavDelegate, [{
        type: Directive,
        args: [{
                selector: 'ion-nav'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.Injector }, { type: AngularDelegate }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();
    return NavDelegate;
}());
export { NavDelegate };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWRlbGVnYXRlLmpzIiwic291cmNlcyI6WyJuZzovQGlvbmljL2FuZ3VsYXIvZGlyZWN0aXZlcy9uYXZpZ2F0aW9uL25hdi1kZWxlZ2F0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLHdCQUF3QixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQVMxRDtJQUVFLHFCQUNFLEdBQWUsRUFDZixRQUFrQyxFQUNsQyxRQUFrQixFQUNsQixlQUFnQyxFQUNoQyxRQUEwQjtRQUUxQixJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUM7UUFDNUIsR0FBRyxDQUFDLGFBQWEsQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ2xGLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixFQUFHLGtCQUFrQixDQUFFLENBQUMsQ0FBQztJQUN6RSxDQUFDOztnQkFUTSxVQUFVO2dCQUNMLHdCQUF3QjtnQkFDeEIsUUFBUTtnQkFDRCxlQUFlO2dCQUN0QixnQkFBZ0I7O0lBUGpCLFdBQVc7UUFQdkIsUUFBUSxDQUFDO1lBQ1IsTUFBTSxFQUFFLENBQUMsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsQ0FBQztZQUN2RSxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxhQUFhLENBQUM7U0FDckssQ0FBQyxDQUNGLEFBRUU7UUFGRCxTQUFTLENBQUMsWEFHRSxXQUFXLENBYXZCO1dBZkMsUUFBUSxFQUFFLFNBQVMsVUFDcEI7Ozs7Ozs7K01BZUQ7SUFEQSxrQkFBQztDQUFBLEFBYkQsSUFhQztTQWJZLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0b3IsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQW5ndWxhckRlbGVnYXRlIH0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2FuZ3VsYXItZGVsZWdhdGUnO1xuaW1wb3J0IHsgUHJveHlDbXAsIHByb3h5T3V0cHV0cyB9IGZyb20gJy4uL3Byb3hpZXMtdXRpbHMnO1xuXG5AUHJveHlDbXAoe1xuICBpbnB1dHM6IFsnYW5pbWF0ZWQnLCAnYW5pbWF0aW9uJywgJ3Jvb3QnLCAncm9vdFBhcmFtcycsICdzd2lwZUdlc3R1cmUnXSxcbiAgbWV0aG9kczogWydwdXNoJywgJ2luc2VydCcsICdpbnNlcnRQYWdlcycsICdwb3AnLCAncG9wVG8nLCAncG9wVG9Sb290JywgJ3JlbW92ZUluZGV4JywgJ3NldFJvb3QnLCAnc2V0UGFnZXMnLCAnZ2V0QWN0aXZlJywgJ2dldEJ5SW5kZXgnLCAnY2FuR29CYWNrJywgJ2dldFByZXZpb3VzJ11cbn0pXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdpb24tbmF2J1xufSlcbmV4cG9ydCBjbGFzcyBOYXZEZWxlZ2F0ZSB7XG4gIHByb3RlY3RlZCBlbDogSFRNTEVsZW1lbnQ7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHJlZjogRWxlbWVudFJlZixcbiAgICByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICAgIGluamVjdG9yOiBJbmplY3RvcixcbiAgICBhbmd1bGFyRGVsZWdhdGU6IEFuZ3VsYXJEZWxlZ2F0ZSxcbiAgICBsb2NhdGlvbjogVmlld0NvbnRhaW5lclJlZlxuICApIHtcbiAgICB0aGlzLmVsID0gcmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgcmVmLm5hdGl2ZUVsZW1lbnQuZGVsZWdhdGUgPSBhbmd1bGFyRGVsZWdhdGUuY3JlYXRlKHJlc29sdmVyLCBpbmplY3RvciwgbG9jYXRpb24pO1xuICAgIHByb3h5T3V0cHV0cyh0aGlzLCB0aGlzLmVsLCBbJ2lvbk5hdkRpZENoYW5nZScgLCAnaW9uTmF2V2lsbENoYW5nZScgXSk7XG4gIH1cbn1cbiJdfQ==